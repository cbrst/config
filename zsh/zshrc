#
# ZIM
#

# Download zimfw plugin manager if missing
if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
	curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh \
		https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
fi

# Install missing modules and update ${ZIM_HOME}/init.zsh
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZIM_CONFIG_FILE:-${ZDOTDIR:-${HOME}}/.zimrc} ]]; then
	source ${ZIM_HOME}/zimfw.zsh init -q
fi

source ${ZIM_HOME}/init.zsh

#
# History
#

export HISTFILE=${__zsh_cache_dir}/zsh_history
export HISTSIZE=2000
export SAVEHIST=${HISTSIZE}

setopt share_history
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_verify
setopt hist_ignore_space

#
# Aliases
#

(( $+commands[eza] )) && alias ls="eza --group-directories-first --icons=always --color=always --git"
(( $+commands[cyberdrop-dl] )) && alias cydl="nvim ${HOME}/AppData/Configs/Default/URLs.txt && cyberdrop-dl --vi-mode"

#
# Bat
#

(( $+commands[bat] )) && () {
  alias cat="bat"

  function battail() {
    tail -f $1 | bat --paging=never -l log
  }

  function batdiff() {
    git diff --name-only --relative --diff-filter=d | xargs bat --diff
  }
}

#
# Completion
#

autoload -Uz compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'

_fzf_comprun() {
	local command=$1
	shift

	case "${command}" in
		cd) fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
		export|unset) fzf --preview "eval 'echo \$'{}" "$@" ;;
		ssh) fzf --preview 'dig {}' "#@" ;;
		cat|bat) fzf --preview 'bat -n --color=always {}' "$@" ;;
		*) fzf --preview '${__zsh_config_dir}/utils/fzf-preview.sh {}' "$@" ;;
	esac
}

#
# Fuck
#

(( $+commands[thefuck] )) && eval $(thefuck --alias)

#
# Zoxide
#

(( $+commands[zoxide] )) && eval "$(zoxide init --cmd z zsh)"
# source ${ZDOTDIR}/zoxide.zsh
